- name: ssh
  import_playbook: requisite-ubuntu.yml

- name: Install Dev Tools
  hosts: container
  become: yes
  tasks:
    - name: Install Dependencies
      shell: "apt-get install -y {{ item }}"
      with_items:
        - build-essential
        - clang
        - curl
        - emacs
        - gcc
        - gdb
        - git
        - gnupg
        - gradle
        - jq
        - make
        - maven
        - mercurial
        - mysql-client
        - nano
        - php7.4-cli
        - protobuf-compiler
        - ruby
        - screen
        - software-properties-common
        - sqlite
        - tmux
        - vim
        - python3-pip

    - name: Install composer
      shell: |
        php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
        php -r "if (hash_file('sha384', 'composer-setup.php') === '756890a4488ce9024fc62c56153228907f1545c228516cbf63f885e036d37e9a59d27d63f46af1d4d07ee0f76181c7d3') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
        php composer-setup.php
        php -r "unlink('composer-setup.php');"

    - name: Add node PPA
      shell: curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -

    - name: Install nodejs
      apt:
        name: nodejs
        update_cache: yes

    - name: Add golang PPA
      shell: add-apt-repository ppa:longsleep/golang-backports

    - name: Install golang
      apt:
        name: golang-go
        update_cache: yes

    - name: Install rustup
      shell: curl https://sh.rustup.rs -sSf | sh -s -- -y

    - name: Install NVM
      shell: curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh | bash

    - name: Install Helm
      shell: curl -o- https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

    - name: Ensure /etc/docker
      file:
        path: /etc/docker
        state: directory

    - name: Ensure /etc/docker/daemon.json
      copy:
        dest: /etc/docker/daemon.json
        content: |
          {
                  "storage-driver": "fuse-overlayfs"
          }

    - name: Ensure Docker dependencies
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - fuse-overlayfs
          - libfuse3-dev
        state: latest
        install_recommends: no

    - name: Ensure Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg

    - name: Ensure Docker APT repo
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ansible_distribution_release}} stable

    - name: Ensure Docker
      apt: 
        name: docker-ce
        state: latest
        update_cache: yes

    - name: Ensure Docker Compose dependencies
      apt:
        name: python3-pip
        state: latest

    - name: Ensure Docker Compose
      pip:
        name: docker-compose
        state: latest

    - name: Ensure Docker Py
      pip:
        name: docker
        state: latest

    - name: Create override folder for containerd
      file:
        path: /etc/systemd/system/containerd.service.d
        state: directory

    - name: Stop LXC issues (stop loading kernel modules, this container will be unprivileged)
      copy:
        content: |
          [Service]
          ExecStartPre=
        dest:  /etc/systemd/system/containerd.service.d/override.conf

    - name: Reload Docker daemon
      systemd:
        state: reloaded
        daemon_reload: yes
        name: docker

    - name: Enable Docker daemon
      service:
        name: docker
        enabled: yes

    - name: Misc stuff to get it to work unprivileged
      shell: rm -rf /var/lib/docker
