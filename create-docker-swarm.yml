---

- name: "Ensure Docker Nodes"
  hosts: proxmox_hosts
  roles:
    # Manager VM
    - role: proxmox-infra-cloudinit-vm
      when: "ansible_play_hosts_all.index(inventory_hostname) < 3"
      vars:
        vm:
          recreate: yes
          name: "manager{{ ansible_play_hosts_all.index(inventory_hostname) }}.vm.netsoc.co"
          clone_qcow2: "https://cloud-images.ubuntu.com/releases/focal/release-20200907/ubuntu-20.04-server-cloudimg-amd64.img"
          clone_qcow2_hash: sha256:995771784f85305ef7e9b779f0f39dde6a0e59b50914c316a9ae8b039cb4c52e
          description:
            groups:
              - vm
              - docker_swarm
              - docker_swarm_managers
              - prometheus_base
              - prometheus_docker
              - prometheus_traefik
              - gluster
              - gluster_client_allowed_mount_storage
              - gluster_client_allowed_mount_homedirs
              - ipaclients
            host_vars:
              ansible_ssh_private_key_file: "./keys/docker_swarm/id_rsa"
          net:
            net0: "virtio,bridge=vmbr0,tag={{ vlan.infra }}"
          disks:
            virtio0:
              pool: local-lvm
              definition: "30,format=raw"
          cores: 4
          memory: 4096
        cloudinit:
          drive_device: ide2
          userdata: |
            #cloud-config
            preserve_hostname: false
            manage_etc_hosts: true
            fqdn: manager{{ ansible_play_hosts_all.index(inventory_hostname) }}.vm.netsoc.co
            packages:
              - qemu-guest-agent
            runcmd:
              - [ systemctl, enable, qemu-guest-agent ]
              - [ systemctl, start, qemu-guest-agent, --no-block ]  
            users:
              - name: netsoc
                gecos: Netsoc Management User
                primary_group: netsoc
                groups: netsoc
                shell: /bin/bash
                sudo: ALL=(ALL) NOPASSWD:ALL
                ssh_authorized_keys:
                  - "{{ lookup('file', './keys/docker_swarm/id_rsa.pub') }}"
            apt: 
              preserve_sources_list: true
              primary:
                - arches: [default]
                  uri: http://ie.archive.ubuntu.com/ubuntu/
              security:
                - uri: http://security.ubuntu.com/ubuntu
          networkconfig:
            version: 2
            ethernets:
              ens18:
                addresses:
                  - "{{ interfaces.managerN.net0.addresses[0] | ipmath(ansible_play_hosts_all.index(inventory_hostname)) }}/24"
                gateway4: "{{ interfaces.managerN.net0.gateway4 }}"
                nameservers: "{{ interfaces.managerN.net0.nameservers }}"
                optional: true
        wait_for_ssh_ip: "{{ interfaces.managerN.net0.addresses[0] | ipmath(ansible_play_hosts_all.index(inventory_hostname))  }}"
    # # Worker VM
    # - role: proxmox-infra-cloudinit-vm
    #   when: "ansible_play_hosts_all.index(inventory_hostname) > 3"
    #   vars:
    #     vm:
    #       name: "worker{{ ansible_play_hosts_all.index(inventory_hostname) }}.vm.netsoc.co"
    #       clone: "netsoc-ubuntu-server-{{ inventory_hostname }}"
    #       description: 
    #         groups:
    #           - vm
    #           - docker_swarm
    #           - prometheus_base
    #           - prometheus_docker
    #           - docker_workers
    #         vars:
    #           ansible_ssh_private_key_file: "./keys/docker_swarm/id_rsa"
    #       net:
    #         net0: "virtio,bridge=vmbr0,tag=30"
    #       disks:
    #         virtio0:
    #           resize: "20G"
    #       cores: 4
    #       memory: 4096
    #     cloudinit:
    #       cloudinit_device: ide2
    #       userdata: |
    #         #cloud-config
    #         users:
    #           - name: netsoc
    #             gecos: Netsoc Management User
    #             primary_group: netsoc
    #             sudo: ALL=(ALL) NOPASSWD:ALL
    #             ssh_authorized_keys:
    #               - "{{ lookup('file', './keys/docker_swarm/id_rsa.pub') }}"
    #         preserve_hostname: false
    #         manage_etc_hosts: true
    #         fqdn: worker{{ ansible_play_hosts_all.index(inventory_hostname) }}.vm.netsoc.co
    #       networkconfig:
    #         version: 2
    #         ethernets:
    #           ens18:
    #             addresses:
    #               - "{{ interfaces.workerN.net0.addresses[0] | ipmath(ansible_play_hosts_all.index(inventory_hostname)) }}/24"
    #             gateway4: "{{ interfaces.workerN.net0.gateway4 }}"
    #             nameservers: "{{ interfaces.workerN.net0.nameservers }}"
    #             optional: true
    #     wait_for_ssh_ip: "{{ interfaces.workerN.net0.addresses[0] | ipmath(ansible_play_hosts_all.index(inventory_hostname)) }}"
  vars_files:
    - vars/network.yml
    - vars/proxmox.yml
    - vars/secrets.yml

- name: "Reload inventory to pull new VMs"
  hosts: 127.0.0.1
  connection: local
  tasks:
    - meta: refresh_inventory