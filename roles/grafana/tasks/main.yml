---
- name: Create Directories
  file:
    path: /netsoc/{{ item }}
    mode: 0770
    state: directory
  loop:
    - /grafana
    - /grafana/data
    - /grafana/data/dashboards
    - /grafana/provisioning
    - /grafana/provisioning/notifiers
    - /grafana/provisioning/datasources

- name: "Copy config provisioning"
  become: yes
  copy:
    mode: 0770
    src: files/provisioning/ # without / copies provisioning itself not just contents
    dest: /netsoc/grafana/provisioning

- name: "Template Prometheus Datasource"
  become: yes
  template:
    mode: 0770
    src: templates/provisioning/datasources/prometheus.yaml
    dest: /netsoc/grafana/provisioning/datasources/prometheus.yaml

- name: "Template Discord Webhook"
  become: yes
  template:
    mode: 0770
    src: templates/provisioning/notifiers/discord.yaml
    dest: /netsoc/grafana/provisioning/notifiers/discord.yaml

- name: "Template Loki Config"
  become: yes
  template:
    mode: 0770
    src: templates/provisioning/datasources/loki.yml
    dest: /netsoc/grafana/provisioning/datasources/loki.yml

- name: Ensure Grafana Docker Container
  become: yes
  docker_compose:
    project_name: grafana
    recreate: always
    restarted: yes
    remove_orphans: yes
    state: present
    definition:
      version: "3.8"
      networks:
        rendering:
        traefik:
          name: traefik
          external: true
      services:
        grafana:
          image: "grafana/grafana:8.0.1"
          user: root
          restart: always
          networks:
            traefik:
            rendering:
          labels:
            - "traefik.enable=true"
            - "traefik.http.routers.grafana.rule=Host(`{{ host }}`)"
            - "traefik.http.routers.grafana.entrypoints=web-secure"
            - "traefik.http.routers.grafana.tls.certResolver=letsencrypt"
            - "traefik.http.services.grafana-service.loadbalancer.server.port=3000"
            - "traefik.http.routers.grafana.service=grafana-service"
            - "traefik.docker.network=traefik"
          volumes:
            - "/netsoc/grafana/provisioning/:/etc/grafana/provisioning/"
            - "/netsoc/grafana/data/:/var/lib/grafana/"
          ports:
            - 3000
          environment:
            GF_SECURITY_ADMIN_PASSWORD: "{{ grafana.password }}"
            GF_SERVER_ROOT_URL: "https://{{ host }}"
            GF_RENDERING_SERVER_URL: "http://renderer:8081/render"
            GF_RENDERING_CALLBACK_URL: "http://grafana:3000/"
            GF_INSTALL_PLUGINS: "grafana-piechart-panel"
        renderer:
          image: "grafana/grafana-image-renderer:3.0.1"
          restart: on-failure
          networks:
            rendering:
          ports:
            - 8081
