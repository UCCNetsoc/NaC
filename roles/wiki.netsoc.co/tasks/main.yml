---

- name: Ensure wiki database
  become: yes
  mysql_db:
    login_host: "{{ mysql_server }}"
    login_user: "{{ mysql_admin_username }}"
    login_password: "{{ mysql_admin_password }}"
    name: "{{ wiki_mysql_database }}"
    state: present

- name: Ensure wiki database user
  mysql_user:
    name: "{{ wiki_mysql_user }}"
    host: "%"
    priv: "{{ wiki_mysql_database }}.*:ALL"
    password: "{{ wiki_mysql_password }}"
    login_host: "{{ mysql_server }}"
    login_user: "{{ mysql_admin_username }}"
    login_password: "{{ mysql_admin_password }}"
    state: present

- name: Ensure /netsoc-neo/docker-data/wiki.netsoc.co created with 775
  become: yes
  file:
    path: /netsoc-neo/docker-data/wiki.netsoc.co/
    owner: root
    group: root
    mode: 0770
    state: directory

- name: Ensure LocalSettings.php configuration
  become: yes
  template:
    src: templates/LocalSettings.php.j2
    dest: /netsoc-neo/docker-data/wiki.netsoc.co/LocalSettings.php

- name: Ensure wiki.netsoc.co Docker Stack
  become: yes
  docker_stack:
    state: present
    name: wiki_netsoc_co
    compose:
      - version: '3.5'
        services:
          mediawiki:
            image: docker.netsoc.co/public/wiki.netsoc.co
            volumes:
              - "/netsoc-neo/docker-data/wiki.netsoc.co/LocalSettings.php:/var/www/html/LocalSettings.php"
              - "/netsoc-neo/docker-data/wiki.netsoc.co/images:/var/www/html/images"
            networks:
              traefik:
            deploy:
              mode: replicated
              replicas: 1
              placement:
                constraints:
                  - node.hostname == {{ inventory_hostname }}
              restart_policy:
                condition: any
                delay: 5s
                max_attempts: 5
              labels:
                - "traefik.enable=true"
                - "traefik.http.routers.wiki.rule=Host(`wiki.{{ co_site }}`)"
                - "traefik.http.routers.wiki.entrypoints=web-secure"
                - "traefik.http.routers.wiki.tls.certResolver=letsencrypt"
                - "traefik.http.routers.wiki.service=wiki-service"
                - "traefik.http.services.wiki-service.loadbalancer.server.port=80"
                - "traefik.http.middlewares.wiki-path-fix.replacepathregex.regex=^/wiki/(.*)"
                - "traefik.http.middlewares.wiki-path-fix.replacepathregex.replacement=/$$1"
                - "traefik.http.routers.wiki.middlewares=wiki-path-fix@docker"
                - "traefik.docker.network=traefik"
        networks:
          traefik:
            external: true