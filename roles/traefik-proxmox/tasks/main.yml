---

- name: Ensure mount dir
  become: yes
  file:
    path: "{{ mount }}/"
    owner: root
    group: root
    mode: 0777
    state: directory

- name: Ensure Cloudflare DNS token in Docker Swarm Secrets
  run_once: true
  become: yes
  docker_secret:
    name: cloudflare_dns_api_token.txt
    data: "{{ cloudflare.api.dns_api_token | default('') }}"
  register: result
  ignore_errors: true

- name: Remove Docker Secret from Swarm Service to update the Secret
  become: yes
  docker_stack:
    state: absent
    absent_retries: 5
    name: cloudflare_dns_api_token.txt
  when: result is failed

- name: Retry setting Docker Secret in Docker Swarm Secrets if necessary
  run_once: true
  when: result is failed
  become: yes
  docker_secret:
    name: cloudflare_dns_api_token.txt
    data: "{{ cloudflare.api.dns_api_token | default('') }}"

- name: Ensure Traefik Docker network
  become: yes
  docker_network:
    name: traefik
    driver: overlay
    attachable: yes

- become: yes
  docker_stack:
    name: traefik
    state: absent

- name: Ensure Traefik Docker Config
  docker_config:
    name: traefik_static_config.yml
    data: "{{ config | from_yaml  }}"
    force: yes
    state: present

- name: Ensure Traefik Docker container
  become: yes
  docker_stack:
    state: present
    name: traefik
    compose:
      - version: "3.8"
        services:
          server:
            image: traefik:2.2.0
            ports:
              - target: 80
                published: 80
                protocol: tcp
                mode: host
              - target: 443
                published: 443
                protocol: tcp
                mode: host
            networks:
              traefik:
            deploy:
              mode: global
              placement:
                constraints:
                  - node.role == manager
                preferences:
                  - spread: node.id
              restart_policy:
                condition: any
                delay: 2s
                max_attempts: 5
              update_config:
                order: stop-first
                failure_action: rollback
              labels:
                # global redirect to https
                - "traefik.enable=true"
                - "traefik.docker.network=traefik"
                - "traefik.http.routers.https-redirect.entrypoints=web"
                - "traefik.http.routers.https-redirect.rule=HostRegexp(`{any:.*}`)"
                - "traefik.http.routers.https-redirect.middlewares=https-redirect"
                - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
                - "traefik.http.middlewares.https-redirect.redirectscheme.port=443"
                - "traefik.http.middlewares.https-redirect.redirectscheme.permanent=true"

                # passworded dashboard
                - "traefik.http.routers.dashboard.entrypoints=web-secure"
                - "traefik.http.routers.dashboard.rule=Host(`{{ dashboard_domain }}`)"
                - "traefik.http.routers.dashboard.tls"
                - "traefik.http.routers.dashboard.service=dashboard-service"
                - "traefik.http.services.dashboard-service.loadbalancer.server.port=8080"
                - "traefik.http.middlewares.dashboard-auth.basicauth.users={{ dashboard_basicauth }}"
                - "traefik.http.routers.dashboard.middlewares=dashboard-auth@docker"
            volumes:
              - "/var/run/docker.sock:/var/run/docker.sock"
              - "{{ mount }}:/traefik/:shared"
            command: traefik --configFile=/static_config.yml
            secrets:
              - "cloudflare_dns_api_token.txt"
            environment:
              CLOUDFLARE_DNS_API_TOKEN_FILE: "/run/secrets/cloudflare_dns_api_token.txt"
            configs:
              - source: traefik_static_config.yml
                target: /static_config.yml
        secrets:
          cloudflare_dns_api_token.txt:
            external: true
        configs:
          traefik_static_config.yml:
            external: true
        networks:
          traefik:
            external: true