global:
  scrape_interval:     30s # Set the scrape interval to every 30 seconds. Default is every 1 minute.
  evaluation_interval: 30s # Evaluate rules every 30 seconds. The default is every 1 minute.

rule_files:
  - "/etc/prometheus/rules/*"

scrape_configs:
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
        labels:
          instance: "{{inventory_hostname}}"

# todo(jac) Update when grafana has been moved to the new setup
#  - job_name: 'grafana'
#    static_configs:
#      - targets: ['grafana:3000']
#        labels:
#          instance: "{{inventory_hostname}}"

  - job_name: 'expexp_metrics'
    static_configs:
    {% for host in groups['prometheus_base'] -%}
      -
        targets:
{%+ if "10.0.10.0/24" | network_in_usable(hostvars[host].ansible_host) %}
          - {{hostvars[host].ansible_host | ipmath(5120) }}:9999
{% else %}
          - {{hostvars[host].ansible_host}}:9999
{% endif %}
        labels:
          instance: "{{host}}"
    {% endfor %}

  - job_name: 'node'
    metrics_path: /proxy
    params:
      module:
       - node
    static_configs:
    {% for host in groups['prometheus_base'] -%}
      -
        targets:
{%+ if "10.0.10.0/24" | network_in_usable(hostvars[host].ansible_host) %}
          - {{hostvars[host].ansible_host | ipmath(5120) }}:9999
{% else %}
          - {{hostvars[host].ansible_host}}:9999
{% endif %}
        labels:
          instance: "{{host}}"
    {% endfor %}

{% if 'prometheus_docker' in groups %}
  - job_name: 'cadvisor'
    metrics_path: /proxy
    params:
      module:
        - cadvisor
    static_configs:
    {% for host in groups['prometheus_docker'] -%}
      -
        targets:
          - {{hostvars[host].ansible_host}}:9999
        labels:
          instance: "{{host}}"
    {% endfor %}
{% endif %}

{% if 'prometheus_apache' in groups %}
  - job_name: 'apache'
    metrics_path: /proxy
    params:
      module:
       - apache
    static_configs:
    {% for host in groups['prometheus_apache'] -%}
      -
        targets:
          - {{hostvars[host].ansible_host}}:9999
        labels:
          instance: "{{host}}"
    {% endfor %}
{% endif %}

{% if 'prometheus_ipmi' in groups %}
  - job_name: 'ipmi'
    metrics_path: /proxy
    params:
      module:
       - ipmi
    static_configs:
    {% for host in groups['prometheus_ipmi'] -%}
      -
        targets:
          - {{hostvars[host].ansible_host}}:9999
        labels:
          instance: "{{host}}"
    {% endfor %}
{% endif %}

{% if 'prometheus_traefik' in groups %}
  - job_name: 'traefik'
    metrics_path: /metrics
    params:
      module:
       - traefik
    static_configs:
    {% for host in groups['prometheus_traefik'] -%}
      -
        targets:
          - {{hostvars[host].ansible_host}}:8082
        labels:
          instance: "{{host}}"
    {% endfor %}
{% endif %}

# ansible_host is on vlan 10 i.e. 10.0.10.XX
# databases cannot access vlan 10
# proxmox hosts have presence on every vlan
# adding 5120 to 10.0.10.XX = 10.0.30.XX
# 5120 = (256 * 10) * 2
  - job_name: 'pve'
    metrics_path: /pve
    params:
      module: [default]
    static_configs:
      - targets:
          - "{{hostvars[groups['proxmox_hosts'][0]].ansible_host | ipmath(5120)}}"
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - target_label: __address__
        replacement: pve-exporter:9221

  - job_name: 'site-up'
    metrics_path: /probe
    static_configs:
      - targets:
        - 'https://netsoc.co/'
        - 'https://wiki.netsoc.co/'
        - 'https://netsoc.dev/'
        - 'https://keycloak.netsoc.dev/'
        - 'https://portainer.netsoc.dev/'
        - 'https://ipa.netsoc.dev/ipa/ui/'
        - 'https://uccexpress.ie/'
        - 'https://motley.ie/'
        labels:
          module: http_2xx
      - targets:
        - 'https://traefik.netsoc.dev/'
        labels:
          module: http_2xx_traefik_auth
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [module]
        target_label: __param_module
      - source_labels: [__param_target]
        target_label: instance
        regex: '^https?:\/\/(.*)\/'
      - target_label: __address__
        replacement: blackbox_exporter:9115

  - job_name: 'discord-bot'
    metrics_path: /metrics
    static_configs:
      - targets:
        - 'bot.netsoc.co'
        labels:
          module: discord_bot

  - job_name: 'minecraft'
    metrics_path: /
    static_configs:
      - targets:
        - '10.0.30.65:19565'
        labels:
          module: minecraft