- hosts: auth
  become: yes
  tasks:
    # Because the Auth server also hosts the FreeIPA DNS server
    # We configured it in create-auth.yml with cloudinit network config to use itself as it's DNS server
    # However we haven't created the FreeIPA installation yet so we need to use a temporary nameserver
    - shell: |
        systemctl stop systemd-resolved
        systemctl disable systemd-resolved
    - copy:
        content: |
          nameserver 1.1.1.1
        dest: /etc/resolv.conf

- name: "Ensure IPA server disk mounted and IPA server created"
  hosts: auth
  become: yes
  roles:
    - role: simple-disk
      vars:
        device: "/dev/vdb"
        partition_size: "100%"
        fstype: "ext4"
        mount_path: "/mnt/data-disk"
        mount_opts: "rw"
    - role: freeipa-server-docker
      vars:
        mount:             "/mnt/data-disk/freeipa"
        interface_address: "{{ interfaces.auth.net0.addresses[0] }}"
        recursive_dns_trusted_network: "10.0.0.0/8"
  vars_files:
    - "vars/freeipa.yml"
    - "vars/network.yml"
    - "vars/secrets.yml"

- hosts: auth
  become: yes
  tasks:
    # Restore DNS to point at FreeIcaPA localhost DNS
    # allows cloud-init to remain working 
   - copy:
        content: |
          nameserver {{ interfaces.auth.net0.addresses[0] | ipmath(0) }}
        dest: /etc/resolv.conf
  vars_files:
    - "vars/network.yml"

- name: "Enroll in IPA server"
  hosts: auth 
  roles:
    - role: freeipa-client
      vars:
        client:
          addresses: 
            - "{{ ansible_default_ipv4.address }}"
  vars_files:
    - "vars/freeipa.yml"
    - "vars/network.yml"
    - "vars/secrets.yml"

- name: "Setup Keycloak"
  hosts: auth
  roles:
    - role: keycloak-docker
      vars:
        mount: "/mnt/data-disk/keycloak"
  vars_files:
    - "vars/keycloak.yml"
    - "vars/freeipa.yml"
    - "vars/secrets.yml"

- import_playbook: "setup-internal-dns.yml"