- name: Setup
  become: yes
  hosts: dev
  tasks:
    - name: Random number to avoid collisions
      set_fact:
        uuid: '{{ 999999999999999 | random | to_uuid }}'
    - name: Configure LXC to use a bridge
      copy:
        content: USE_LXC_BRIDGE="true"
        dest: /etc/default/lxc-net
        mode: 0774
    - name: Start lxc-net service
      service:
        name: lxc-net
        state: started
    - name: Make /tmp/{{uuid}} dir
      file:
        state: directory
        path: '/tmp/{{ uuid }}/lxc'
    - name: Configure general container settings
      copy:
        content: |
          lxc.net.0.type = veth
          lxc.net.0.link = lxcbr0
          lxc.net.0.flags = up
          lxc.net.0.hwaddr = 00:16:3e:xx:xx:xx
        dest: /etc/lxc/default.conf
        mode: 0774
    - name: Output Directories Vars
      set_fact:
        packer_output: '/tmp/{{ uuid }}/output'
        template_output: '/tmp/{{ uuid }}/templates'
    - name: Ensure Output Dirs
      file:
        path: '{{ item }}'
        state: directory
      loop:
        - '{{ packer_output }}'
        - '{{ template_output }}'
    - name: Install depenendencies
      apt:
        name:
          - python3-pip
          - git
          - lxc-pve-dev
          - pkg-config
          - dnsmasq
          - cloud-guest-utils
    - name: Grow sda3
      command: growpart /dev/sda 3
      ignore_errors: yes
    - name: Resize sda3
      command: pvresize /dev/sda3
      ignore_errors: yes
    - name: Resize root partition
      command: lvresize -l +100%FREE /dev/pve/root
      ignore_errors: yes
    - name: Resize root fs
      command: resize2fs /dev/mapper/pve-root
      ignore_errors: yes
    - name: Disable dnsmasq
      systemd:
        name: dnsmasq
        enabled: no
        state: stopped
    - name: python3 lxc bindings
      pip:
        name: git+https://github.com/lxc/python3-lxc
        executable: pip3
    - name: python3 ansible
      pip:
        name: ansible
        executable: pip3
    - name: Restart lxc-net
      systemd:
        name: lxc-net
        state: restarted
  roles:
    - packer
  tags:
    - always

- name: Delegate to Dev VM
  become: yes
  hosts: dev
  tasks:
    - name: Copy provisioning files
      copy:
        src: ./lxc/
        dest: '/tmp/{{ uuid }}/lxc/'
  tags:
    - always

# Additional base templates can be found here http://uk.images.linuxcontainers.org
- name: Templates
  hosts: dev
  become: yes
  tasks:
    - name: Ghost CMS Ubuntu
      command:
        cmd: >
          packer build
          -var "name={{ name }}"
          -var "dist={{ dist }}"
          -var "rel={{ rel }}"
          -var "playbook={{ playbook }}"
          -var "packer_output={{ packer_output }}"
          -var "uuid={{ uuid }}"
          /tmp/{{ uuid }}/lxc/packer.json
      vars:
        name: ghostcms
        dist: ubuntu
        rel: focal
        playbook: ghostcms-ubuntu
      tags:
        - ghostcms-ubuntu
    - name: nginx Ubuntu
      command:
        cmd: >
          packer build
          -var "name={{ name }}"
          -var "dist={{ dist }}"
          -var "rel={{ rel }}"
          -var "playbook={{ playbook }}"
          -var "packer_output={{ packer_output }}"
          -var "uuid={{ uuid }}"
          /tmp/{{ uuid }}/lxc/packer.json
      vars:
        name: nginx
        dist: ubuntu
        rel: focal
        playbook: nginx-ubuntu
      tags:
        - nginx-ubuntu
    - name: MEAN Ubuntu
      command:
        cmd: >
          packer build
          -var "name={{ name }}"
          -var "dist={{ dist }}"
          -var "rel={{ rel }}"
          -var "playbook={{ playbook }}"
          -var "packer_output={{ packer_output }}"
          -var "uuid={{ uuid }}"
          /tmp/{{ uuid }}/lxc/packer.json
      vars:
        name: mean
        dist: ubuntu
        rel: focal
        playbook: mean-ubuntu
      tags:
        - mean-ubuntu
    - name: Game Servers Ubuntu
      command:
        cmd: >
          packer build
          -var "name={{ name }}"
          -var "dist={{ dist }}"
          -var "rel={{ rel }}"
          -var "playbook={{ playbook }}"
          -var "packer_output={{ packer_output }}"
          -var "uuid={{ uuid }}"
          /tmp/{{ uuid }}/lxc/packer.json
      vars:
        name: gameservers
        dist: ubuntu
        rel: focal
        playbook: linuxgsm-ubuntu
      tags:
        - linuxgsm-ubuntu
    - name: Devtools Ubuntu
      command:
        cmd: >
          packer build
          -var "name={{ name }}"
          -var "dist={{ dist }}"
          -var "rel={{ rel }}"
          -var "playbook={{ playbook }}"
          -var "packer_output={{ packer_output }}"
          -var "uuid={{ uuid }}"
          /tmp/{{ uuid }}/lxc/packer.json
      vars:
        name: devtools
        dist: ubuntu
        rel: focal
        playbook: devtools-ubuntu
      tags:
        - devtools-ubuntu
    - name: LEMP Ubuntu
      command:
        cmd: >
          packer build
          -var "name={{ name }}"
          -var "dist={{ dist }}"
          -var "rel={{ rel }}"
          -var "playbook={{ playbook }}"
          -var "packer_output={{ packer_output }}"
          -var "uuid={{ uuid }}"
          /tmp/{{ uuid }}/lxc/packer.json
      vars:
        name: lemp
        dist: ubuntu
        rel: focal
        playbook: lemp-ubuntu
      tags:
        - lemp-ubuntu
    - name: Wordpress Ubuntu
      command:
        cmd: >
          packer build
          -var "name={{ name }}"
          -var "dist={{ dist }}"
          -var "rel={{ rel }}"
          -var "playbook={{ playbook }}"
          -var "packer_output={{ packer_output }}"
          -var "uuid={{ uuid }}"
          /tmp/{{ uuid }}/lxc/packer.json
      vars:
        name: wordpress
        dist: ubuntu
        rel: focal
        playbook: wordpress-ubuntu
      tags:
        - wordpress-ubuntu
    - name: Node Ubuntu
      command:
        cmd: >
          packer build
          -var "name={{ name }}"
          -var "dist={{ dist }}"
          -var "rel={{ rel }}"
          -var "playbook={{ playbook }}"
          -var "packer_output={{ packer_output }}"
          -var "uuid={{ uuid }}"
          /tmp/{{ uuid }}/lxc/packer.json
      vars:
        name: node
        dist: ubuntu
        rel: focal
        playbook: node-ubuntu
      tags:
        - node-ubuntu

# Packer exports containers as rootfs.tar.gz with the following structure
#   rootfs/
#     - bin
#     - boot
#     - etc...
# Proxmox expects bin,boot,etc... without parent rootfs dir
# As such we must extract rootfs and then compress just its contents
- name: Fix Archives
  become: yes
  hosts: dev
  tasks:
    - name: Get all templates
      find:
        pattern: 'rootfs.tar.gz'
        path: '{{ packer_output }}'
        recurse: yes
      register: files
    - name: Extract
      shell:
        cmd: 'tar --preserve-permissions --numeric-owner -xzf {{ item.path }} -C {{ item.path | dirname }}'
        warn: false
      loop: '{{ files.files }}'
    - name: Compress
      shell:
        cmd: "tar -czf {{ template_output }}/netsoc-{{ item.path.split('/')[-2] }}.tar.gz -C {{ item.path | dirname }}/rootfs ."
        warn: false
      loop: '{{ files.files }}'
  tags:
    - always

- name: Copy Templates to Proxmox
  become: yes
  hosts: dev
  tasks:
    - name: Copy templates
      command: 'mv {{ template_output }}/* /var/lib/vz/template/cache/'
  tags:
    - always

- name: Cleanup
  become: yes
  hosts: dev
  tasks:
    - name: Tidy up directory
      file:
        path: '/tmp/{{ uuid }}'
        state: absent
  tags:
    - always
