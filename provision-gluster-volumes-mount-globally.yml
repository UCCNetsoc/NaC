---
- name: "Initial setup"
  hosts: gluster_server
  roles:
    - ansible-requirements
    - utf8-locale
  tags:
    - initial

- name: "Enroll in IPA server"
  hosts: gluster_server
  roles:
    - role: freeipa-client
      vars:
        client:
          addresses:
            - "{{ ansible_default_ipv4.address }}"
  vars_files:
    - "vars/freeipa.yml"
    - "vars/network.yml"
    - "vars/secrets.yml"
  tags:
    - ipa

- name: "Setup Data Disk for Gluster on server machines"
  hosts: gluster_server
  become: yes
  tasks:
    - name: "Create LVM volume group"
      lvg:
        pvs:
          - /dev/vdb
        state: present
        vg: brickvg

    - name: "Check datavolume exists"
      stat:
        path: '/dev/mapper/brickvg-thinpool'
      ignore_errors: true
      register: _volume

    - name: "Create data volume"
      lvol:
        lv: 'thinpool'
        size: '90%VG'
        vg: 'brickvg'
        force: yes
      register: _datavolume_created
      when: not _volume.stat.exists

    - name: "Create metadata volume"
      lvol:
        lv: 'thinpool-meta'
        size: '2%VG'
        vg: 'brickvg'
      when: _datavolume_created.changed

    - name: "Convert data volume to thin pool one"
      shell:
        lvconvert
          --type thin-pool
          --poolmetadata "brickvg/thinpool-meta"
          "brickvg/thinpool"
          -y
          -c 512K
      when: _datavolume_created.changed
    - filesystem:
        fstype: xfs
        dev: /dev/mapper/brickvg-thinpool
        opts: -f -i size=512 -n size=8192 -d su=128k,sw=10
      when: _datavolume_created.changed
    - name: Ensure Gluster brick and mount directories exist.
      file:
        path: /mnt/data-disk
        state: directory
        mode: 0755
    - mount:
        path: /mnt/data-disk
        src: /dev/brickvg/thinpool
        fstype: xfs
        opts: rw,inode64,noatime,nouuid
        state: mounted
  tags:
    - gluster

- name: Install Gluster binaries on all machines
  hosts: gluster
  become: yes
  roles:
    - geerlingguy.glusterfs
  tags:
    - gluster
    - gluster-mounts

- name: Setup GlusterFS volumes on server machines
  hosts: gluster_server[0]
  become: yes
  tasks:    
    - name: Configure Gluster volume
      become: yes
      gluster_volume:
        state: present
        name: "{{ item.name }}"
        brick: "{{ gluster_brick_dir }}/{{ item.name }}"
        replicas: "{{ groups.gluster_server | length }}"
        cluster: "{{ groups.gluster_server | join(',') }}"
        host: "{{ inventory_hostname }}"
      with_items: "{{ gluster_volumes }}"

    - name: Configure Gluster volume
      become: yes
      gluster_volume:
        state: started
        name: "{{ item.name }}"
        brick: "{{ gluster_brick_dir }}/{{ item.name }}"
        replicas: "{{ groups.gluster_server | length }}"
        cluster: "{{ groups.gluster_server | join(',') }}"
        host: "{{ inventory_hostname }}"
      with_items: "{{ gluster_volumes }}"
  vars:
    gluster_volumes:
      - { name: storage }
      - { name: homedirs }
    gluster_brick_dir: "/mnt/data-disk"
  tags:
    - gluster
    - gluster-mounts

# https://www.redhat.com/en/blog/hardening-gluster-installations-tls
- name: "Setup TLS/SSL Private Key & Cert on all machines"
  hosts: gluster
  become: yes
  tasks:
    - shell: |
        rm -f /etc/ssl/glusterfs.key /etc/ssl/glusterfs.pem /etc/ssl/glusterfs.ca &&
        openssl genrsa -out /etc/ssl/glusterfs.key 4096 &&
        openssl req -new -x509 -key /etc/ssl/glusterfs.key -subj "/CN={{ ansible_fqdn }}" -out /etc/ssl/glusterfs.pem
      args:
        executable: /bin/bash
    - slurp:
        src: /etc/ssl/glusterfs.pem
      register: host_pem_slurped
    - set_fact:
        host_pem: "{{ host_pem_slurped['content'] | b64decode }}"
    - debug:
        msg: "{{ host_pem }}"
  tags:
    - gluster
    - gluster-mounts

- name: "Setup self-signed CA on all machines"
  hosts: gluster
  become: yes
  tasks:
    - set_fact:
        ca: |
          {{ ( play_hosts | map('extract',hostvars) |
             selectattr('host_pem','defined') |
             map(attribute='host_pem') | list) | join('') }}
    - debug:
        msg: "{{ ca }}"
    - copy:
        content: "{{ ca }}"
        dest: "/etc/ssl/glusterfs.ca"
    - shell:
        rm -rf /var/lib/glusterd/secure-access
  tags:
    - gluster
    - gluster-mounts


- name: "Start TLS/SSL and mount volumes on all machines"
  hosts: gluster
  become: yes
  tasks:
    - shell: | 
        echo "y" | gluster volume stop {{ item.name }} || true
        gluster volume set {{ item.name }} client.ssl on
        gluster volume set {{ item.name }} server.ssl on
        gluster volume start {{ item.name }}
      when: "inventory_hostname == groups.gluster_server[0]"
      args:
        executable: /bin/bash
      with_items: "{{ gluster_volumes }}"
      run_once: true 
    - name: Ensure Gluster volume is mounted.
      mount:
        name: "{{ item.mount }}"
        src: "{{ groups.gluster_server[0] }}:/{{ item.name }}"
        fstype: glusterfs
        opts: "defaults,_netdev"
        state: mounted
      with_items: "{{ gluster_volumes }}"
      when: "inventory_hostname in groups[item.group]"
    - shell:
        touch /var/lib/glusterd/secure-access
  vars:
    gluster_volumes: 
      - { name: "storage", mount: "/storage", group: "gluster_client_allowed_mount_storage" }
      - { name: "homedirs", mount: "/home/users", group: "gluster_client_allowed_mount_homedirs" }
  tags:
    - gluster
    - gluster-mounts

