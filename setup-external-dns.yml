---
- name: "Setup DNS"
  hosts: localhost
  connection: local
  tasks:
    - set_fact:
        cf_headers:
          X-Auth-Email: "{{ cloudflare.api.email }}"
          Authorization: "Bearer {{ cloudflare.api.dns_api_token }}"
          Content-Type: "application/json"
        grafana_basic_auth: "{{ grafana.username }}:{{ grafana.password }}"

    - name: "Set Grafana dashboard annotation"
      uri:
        url: https://grafana.netsoc.dev/api/annotations
        method: POST
        headers:
          Content-Type: "application/json"
          Accept: "application/json"
          Authorization: "Basic {{ grafana_basic_auth | b64encode }}"
        body_format: json
        body: '{
          "panelId": 10,
          "dashboardId": 25,
          "time": {{ ansible_date_time.epoch | int * 1000 }},
          "tags": [ "ansible" ],
          "text": "Ansible setup-external-dns.yml playbook started",
        }'

    # DNS for netsoc.dev
    - name: "Get zone ID for netsoc.dev"
      uri:
        url: https://api.cloudflare.com/client/v4/zones?name=netsoc.dev
        return_content: yes
        headers: "{{ cf_headers }}"
      register: zone_id_result

    - name: "Get zone records for netsoc.dev"
      uri:
        url: "https://api.cloudflare.com/client/v4/zones/{{ zone_id_result.json.result[0].id }}/dns_records?per_page=100"
        return_content: yes
        headers: "{{ cf_headers }}"
      register: zone_records_result

    - name: "Delete records for netsoc.dev"
      cloudflare_dns:
        zone: "netsoc.dev"
        record: "{{ item.name }}"
        state: absent
        account_email: "{{ cloudflare.api.email }}"
        account_api_token: "{{ cloudflare.api.key }}"
      with_items: "{{ zone_records_result.json.result }}"

    - name: "Set records for netsoc.dev"
      cloudflare_dns:
        zone: "netsoc.dev"
        type: "{{ item.type }}"
        record: "{{ item.name }}"
        value: "{{ item.value }}"
        state: present
        account_email: "{{ cloudflare.api.email }}"
        account_api_token: "{{ cloudflare.api.key }}"
      with_items:
        # A Records
        - { type: A,      name: "bigbertha",      value: "84.39.234.50" }
        - { type: A,      name: "boole",          value: "84.39.234.54" }
        - { type: A,      name: "feynman",        value: "84.39.234.53" }
        - { type: A,      name: "leela",          value: "84.39.234.51" }
        - { type: A,      name: "lovelace",       value: "84.39.234.52" }
 
        - { type: A,      name: 80-443-swarm-ingress,  value: "84.39.234.53" }

        # CNAMEs
        - { type: CNAME,  name: "netsoc.dev",       value: "traefik.netsoc.dev" }
        - { type: CNAME,  name: grafana,            value: "bigbertha.netsoc.dev" }

        - { type: CNAME,  name: traefik,               value: 80-443-swarm-ingress.netsoc.dev }
        - { type: CNAME,  name: "*.netsoc.dev",        value: traefik.netsoc.dev              }
        - { type: CNAME,  name: www.*.netsoc.dev,      value: traefik.netsoc.dev              }
        - { type: CNAME,  name: ipa,                   value: traefik.netsoc.dev              }
        - { type: CNAME,  name: ci,                    value: traefik.netsoc.dev              }
        - { type: CNAME,  name: keycloak,              value: traefik.netsoc.dev              }
        - { type: CNAME,  name: portainer,             value: traefik.netsoc.dev              }
        - { type: CNAME,  name: prometheus,            value: traefik.netsoc.dev              }

    # DNS for netsoc.co
    - name: "Get zone ID for netsoc.co"
      uri:
        url: https://api.cloudflare.com/client/v4/zones?name=netsoc.co
        return_content: yes
        headers: "{{ cf_headers }}"
      register: zone_id_result

    - name: "Get zone records for netsoc.co"
      uri:
        url: "https://api.cloudflare.com/client/v4/zones/{{ zone_id_result.json.result[0].id }}/dns_records?per_page=100"
        return_content: yes
        headers: "{{ cf_headers }}"
      register: zone_records_result

    - name: "Delete records for netsoc.co"
      cloudflare_dns:
        zone: "netsoc.co"
        record: "{{ item.name }}"
        state: absent
        account_email: "{{ cloudflare.api.email }}"
        account_api_token: "{{ cloudflare.api.key }}"
      with_items: "{{ zone_records_result.json.result }}"

    - name: "Set records for netsoc.co"
      cloudflare_dns:
        zone: "netsoc.co"
        type: "{{ item.type }}"
        record: "{{ item.name }}"
        value: "{{ item.value }}"
        state: present
        account_email: "{{ cloudflare.api.email }}"
        account_api_token: "{{ cloudflare.api.key }}"
      with_items:
        # A Records
        - { type: A,      name: "bigbertha",      value: "84.39.234.50" }
        - { type: A,      name: "boole",          value: "84.39.234.54" }
        - { type: A,      name: "feynman",        value: "84.39.234.53" }
        - { type: A,      name: "leela",          value: "84.39.234.51" }
        - { type: A,      name: "lovelace",       value: "84.39.234.52" }
        - { type: A,      name: "elon",           value: "143.239.87.40" }
        - { type: A,      name: "tesla",          value: "143.239.87.41" }

        - { type: A,      name: "ns1",            value: "84.39.234.50" }   # Legacy
        - { type: A,      name: "ns2",            value: "84.39.234.52" }

        # New - post proxmoxification
        - { type: A,     name: 80-443-swarm-ingress,  value: "84.39.234.53" }
        - { type: CNAME, name: portal,                value: 80-443-swarm-ingress.netsoc.co }
        - { type: CNAME, name: tutorial,              value: 80-443-swarm-ingress.netsoc.co }
        - { type: CNAME, name: blog,                  value: 80-443-swarm-ingress.netsoc.co }
        - { type: CNAME, name: wiki,                  value: 80-443-swarm-ingress.netsoc.co }
        - { type: CNAME, name: netsoc.co,             value: 80-443-swarm-ingress.netsoc.co }

        # ;; CNAME Records
        - { type: CNAME, name: admin, value: bigbertha.netsoc.co }
        - { type: CNAME, name: alerts, value: bigbertha.netsoc.co }
        - { type: CNAME, name: bert.ci, value: bigbertha.netsoc.co }
        - { type: CNAME, name: blog, value: bigbertha.netsoc.co }
        - { type: CNAME, name: ci, value: bigbertha.netsoc.co }
        - { type: CNAME, name: constitution, value: uccnetworkingsociety.github.io }
        - { type: CNAME, name: consul, value: bigbertha.netsoc.co }
        - { type: CNAME, name: discord, value: bigbertha.netsoc.co }
        - { type: CNAME, name: docker, value: boole.netsoc.co }
        - { type: CNAME, name: es, value: bigbertha.netsoc.co }
        - { type: CNAME, name: esports, value: bigbertha.netsoc.co }
        - { type: CNAME, name: "*.evan", value: leela.netsoc.co }
        - { type: CNAME, name: grafana, value: bigbertha.netsoc.co }
        - { type: CNAME, name: hlm, value: bigbertha.netsoc.co }
        - { type: CNAME, name: impressive, value: bigbertha.netsoc.co }
        - { type: CNAME, name: irc, value: bigbertha.netsoc.co }
        - { type: CNAME, name: ldap, value: elon.netsoc.co }
        - { type: CNAME, name: logs, value: bigbertha.netsoc.co }
        - { type: CNAME, name: lxd, value: bigbertha.netsoc.co }
        - { type: CNAME, name: minecraft, value: feynman.netsoc.co }
        - { type: CNAME, name: mysql, value: bigbertha.netsoc.co }
        - { type: CNAME, name: "*", value: bigbertha.netsoc.co }
        - { type: CNAME, name: portainer, value: boole.netsoc.co }
        - { type: CNAME, name: prom, value: bigbertha.netsoc.co }
        - { type: CNAME, name: pterodactyl-daemon, value: lovelace.netsoc.co }
        - { type: CNAME, name: sentry, value: boole.netsoc.co }
        - { type: CNAME, name: traefik, value: bigbertha.netsoc.co }
        - { type: CNAME, name: unf2b, value: leela.netsoc.co }
        - { type: CNAME, name: userdomains, value: leela.netsoc.co }
        - { type: CNAME, name: vault, value: bigbertha.netsoc.co }
        - { type: CNAME, name: warpcon.co, value: leela.netsoc.co }
        # - { type: CNAME, name: wiki, value: bigbertha.netsoc.co }
        - { type: CNAME, name: www.*.evan, value: leela.netsoc.co }
        - { type: CNAME, name: www.*, value: bigbertha.netsoc.co }
<<<<<<< HEAD
        - { type: CNAME, name: www, value: netsoc.co }
=======
        - { type: CNAME, name: www, value: 80-443-swarm-ingress.netsoc.co }
>>>>>>> remote-backup
        - { type: CNAME, name: www.warpcon.co, value: leela.netsoc.co }

        # MX
        - { type: MX, name: "netsoc.co", value: "mx.zoho.com" }
        - { type: MX, name: "netsoc.co", value: "mx2.zoho.com" }

        # TXT
        - { type: TXT, name: "_dmarc", value: "v=DMARC1; p=none"}
        - { type: TXT, name: "_github-challenge-uccnetsoc", value: "58926b4c4e"}
        - { type: TXT, name: "netsoc.co", value: "v=spf1 mx include:zoho.com include:u1980078.wl.sendgrid.net -all"}
        - { type: TXT, name: "zoho._domainkey", value: "k=rsa; t=y; p=MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCB3sWPAMJHYvSCWEueINNaIsPy4OeAQgFsm3y+IcOSUcXJUhHr+LrYGuD9SZzIEh0ekm0Usm73gRz4LgGYfeZ9SXbR3H1LupOETGym0FRRQnAjnXI9L/wfaOzYwbpKm04lhpbobhAwrtsUcgMyo+wmEByM3AR25+YDmlUuijmNTwIDAQAB" }

    - name: "Add Minecraft SRV record"
      cloudflare_dns:
        zone: "netsoc.co"
        name: "minecraft"
        type: "SRV"
        proto: "tcp"
        service: "minecraft"
        port: 1194
        priority: 0
        weight: 5
        value: "minecraft.netsoc.co"
        state: present
        account_email: "{{ cloudflare.api.email }}"
        account_api_token: "{{ cloudflare.api.key }}"
  vars_files:
    - vars/network.yml
    - vars/cloudflare.yml
    - vars/monitoring.yml
    - vars/secrets.yml